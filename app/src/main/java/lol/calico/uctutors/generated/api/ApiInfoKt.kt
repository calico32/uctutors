// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/info.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package lol.calico.uctutors.generated.api;

@kotlin.jvm.JvmName("-initializeapiInfo")
public inline fun apiInfo(block: lol.calico.uctutors.generated.api.ApiInfoKt.Dsl.() -> kotlin.Unit): lol.calico.uctutors.generated.api.ApiInfo =
  lol.calico.uctutors.generated.api.ApiInfoKt.Dsl._create(lol.calico.uctutors.generated.api.ApiInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `api.ApiInfo`
 */
public object ApiInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: lol.calico.uctutors.generated.api.ApiInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: lol.calico.uctutors.generated.api.ApiInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): lol.calico.uctutors.generated.api.ApiInfo = _builder.build()

    /**
     * `uint32 version = 1 [json_name = "version"];`
     */
    public var version: kotlin.Int
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * `uint32 version = 1 [json_name = "version"];`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * `string commit = 2 [json_name = "commit"];`
     */
    public var commit: kotlin.String
      @JvmName("getCommit")
      get() = _builder.getCommit()
      @JvmName("setCommit")
      set(value) {
        _builder.setCommit(value)
      }
    /**
     * `string commit = 2 [json_name = "commit"];`
     */
    public fun clearCommit() {
      _builder.clearCommit()
    }

    /**
     * `.google.protobuf.Timestamp build_time = 3 [json_name = "buildTime"];`
     */
    public var buildTime: com.google.protobuf.Timestamp
      @JvmName("getBuildTime")
      get() = _builder.getBuildTime()
      @JvmName("setBuildTime")
      set(value) {
        _builder.setBuildTime(value)
      }
    /**
     * `.google.protobuf.Timestamp build_time = 3 [json_name = "buildTime"];`
     */
    public fun clearBuildTime() {
      _builder.clearBuildTime()
    }
    /**
     * `.google.protobuf.Timestamp build_time = 3 [json_name = "buildTime"];`
     * @return Whether the buildTime field is set.
     */
    public fun hasBuildTime(): kotlin.Boolean {
      return _builder.hasBuildTime()
    }

    /**
     * `.google.protobuf.Timestamp current_time = 4 [json_name = "currentTime"];`
     */
    public var currentTime: com.google.protobuf.Timestamp
      @JvmName("getCurrentTime")
      get() = _builder.getCurrentTime()
      @JvmName("setCurrentTime")
      set(value) {
        _builder.setCurrentTime(value)
      }
    /**
     * `.google.protobuf.Timestamp current_time = 4 [json_name = "currentTime"];`
     */
    public fun clearCurrentTime() {
      _builder.clearCurrentTime()
    }
    /**
     * `.google.protobuf.Timestamp current_time = 4 [json_name = "currentTime"];`
     * @return Whether the currentTime field is set.
     */
    public fun hasCurrentTime(): kotlin.Boolean {
      return _builder.hasCurrentTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun lol.calico.uctutors.generated.api.ApiInfo.copy(block: `lol.calico.uctutors.generated.api`.ApiInfoKt.Dsl.() -> kotlin.Unit): lol.calico.uctutors.generated.api.ApiInfo =
  `lol.calico.uctutors.generated.api`.ApiInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val lol.calico.uctutors.generated.api.ApiInfoOrBuilder.buildTimeOrNull: com.google.protobuf.Timestamp?
  get() = if (hasBuildTime()) getBuildTime() else null

public val lol.calico.uctutors.generated.api.ApiInfoOrBuilder.currentTimeOrNull: com.google.protobuf.Timestamp?
  get() = if (hasCurrentTime()) getCurrentTime() else null

